include proxy_params;

server {
    # The shibboleth-nginx-proxy actually services non-encrypted HTTP on port 443
    # Check the following link to see why...
    # https://github.com/nginx-shib/nginx-http-shibboleth/issues/22#issuecomment-315543324
    listen [::]:443;
    listen 443;

    server_name $SERVERNAME;

    # FastCGI authorizer for Auth Request module
    location = /shibauthorizer {
        internal;
        include fastcgi_params;
        fastcgi_pass unix:/var/run/shibboleth/shibauthorizer.sock;
    }

    # FastCGI responder
    location /Shibboleth.sso {
        include fastcgi_params;
        fastcgi_pass unix:/var/run/shibboleth/shibresponder.sock;
    }

    # Using the ``shib_request_set`` directive, we can introduce attributes as
    # environment variables for the backend application. In this example, we
    # set ``fastcgi_param`` but this could be any type of Nginx backend that
    # supports parameters (by using the appropriate *_param option)
    #
    # The ``shib_fastcgi_params`` is an optional set of default parameters,
    # available in the ``includes/`` directory in this repository.
    #
    # Choose this type of configuration unless your backend application
    # doesn't support server parameters or specifically requires headers.
    # location /secure-environment-vars {
    #     shib_request /shibauthorizer;
    #     include shib_fastcgi_params;
    #     shib_request_set $shib_commonname $upstream_http_variable_commonname;
    #     shib_request_set $shib_email $upstream_http_variable_email;
    #     fastcgi_param COMMONNAME $shib_commonname;
    #     fastcgi_param EMAIL $shib_email;
    #     fastcgi_pass unix:/path/to/backend.socket;
    # }

    # A secured location. All incoming requests query the Shibboleth FastCGI authorizer.
    # Watch out for performance issues and spoofing!
    #
    # Choose this type of configuration for ``proxy_pass`` applications
    # or backends that don't support server parameters.
    location / {
        shib_request /shibauthorizer;
        shib_request_use_headers on;

        # Attributes from Shibboleth are introduced as headers by the FastCGI
        # authorizer so we must prevent spoofing. The
        # ``shib_clear_headers`` is a set of default header directives,
        # available in the `includes/` directory in this repository.
        include shib_clear_headers;

        # Add *all* attributes that your application uses, including all
        # variations.
        more_clear_input_headers 'eduPersonScopedAffiliation' 'eduPersonTargetedID' 'mail';

        # This backend application will receive Shibboleth variables as request
        # headers (from Shibboleth's FastCGI authorizer)

        proxy_pass $REMOTE;
        proxy_read_timeout 9000;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # Allow upload of larger Notebooks
    client_max_body_size 256m;
    client_body_buffer_size 16k;
}
